<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Express Claim - Budget Claims System</title>
    <link rel="stylesheet" href="/css/styles.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        /* Preserve existing styles */
        .drag-drop-zone {
            border: 2px dashed #ccc;
            border-radius: 10px;
            padding: 20px;
            text-align: center;
            background: #f8f9fa;
            transition: all 0.3s ease;
            cursor: pointer;
            margin-bottom: 20px;
        }
        .drag-drop-zone.dragover {
            background: #e9ecef;
            border-color: #0d6efd;
        }
        .loading-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.8);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }
        .error-message {
            display: none;
            margin-top: 10px;
        }
        .success-message {
            display: none;
            margin-top: 10px;
        }
        /* Add divider style */
        .divider {
            display: flex;
            align-items: center;
            text-align: center;
            margin: 20px 0;
        }
        .divider::before,
        .divider::after {
            content: '';
            flex: 1;
            border-bottom: 1px solid #ccc;
        }
        .divider span {
            padding: 0 10px;
            color: #6c757d;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <header>
        <!-- Logo and navigation -->
        <img src="/images/Budget_logo.svg" alt="Budget Logo" class="logo">
        <h1>Budget Claims System</h1>
        <nav>
            <ul>
                <li><a href="/dashboard">Dashboard</a></li> <!-- Link to Dashboard -->
                <li class="Claims">
                    <a href="javascript:void(0)" class="dropbtn">Claims</a> <!-- Dropdown trigger -->
                    <div class="dropdown-content">
                        <a href="/claims/search">Search Claims</a> <!-- Link to Search Claims -->
                        <a href="/claims/add">Add Claim</a> <!-- Link to Add Claim -->
                    </div>
                </li>
                <li><a href="/reports">Reports</a></li> <!-- Link to Reports -->
                <li class="Settings">
                    <a href="javascript:void(0)" class="dropbtn">Settings</a> <!-- Dropdown trigger -->
                    <div class="dropdown-content">
                        <a href="/general-settings">General Settings</a> <!-- Link to General Settings -->
                        <a href="/user-management">User Management</a> <!-- Link to User Management -->
                        <a href="/email-templates">Email Templates</a> <!-- Link to Email Templates -->
                    </div>
                </li>
                <li><a href="/help">Help</a></li> <!-- Link to Help -->
                <li><a href="/logout">Logout</a></li> <!-- Link to Logout -->
            </ul>
        </nav>
    </header>

    <!-- Loading Overlay -->
    <div class="loading-overlay">
        <div class="text-center">
            <div class="spinner-border text-primary" role="status"></div>
            <p class="mt-2">Processing rental agreement...</p>
        </div>
    </div>

    <div class="container">
        <h1>Express Claim</h1>
        <p>Quick claim creation with essential information only</p>

        <!-- Rental Agreement Upload Section -->
        <div class="card mb-4">
            <div class="card-body">
                <h5 class="card-title">Upload Rental Agreement</h5>
                <p class="card-text text-muted">Upload a rental agreement to automatically fill the form</p>
                
                <div id="uploadZone" class="drag-drop-zone">
                    <i class="fas fa-file-upload fa-2x mb-2 text-muted"></i>
                    <h6>Drag & Drop Rental Agreement</h6>
                    <p class="text-muted small">or click to select file</p>
                    <p class="text-muted small">Supported formats: PDF, DOC, DOCX</p>
                    <input type="file" id="fileInput" class="d-none" accept=".pdf,.doc,.docx">
                </div>

                <!-- Error Message -->
                <div id="errorMessage" class="alert alert-danger error-message" role="alert"></div>

                <!-- Success Message -->
                <div id="successMessage" class="alert alert-success success-message" role="alert"></div>
            </div>
        </div>

        <div class="divider">
            <span>OR</span>
        </div>

        <!-- Manual Form Entry -->
        <form action="/claims" method="POST" class="claim-info">
            <!-- MVA Number -->
            <div>
                <label for="mva">MVA Number *</label>
                <input type="text" id="mva" name="mva" required>
            </div>

            <!-- Accident Date -->
            <div>
                <label for="accidentDate">Accident Date *</label>
                <input type="date" id="accidentDate" name="accidentDate" required>
            </div>

            <!-- Customer Name -->
            <div>
                <label for="customerName">Customer Name *</label>
                <input type="text" id="customerName" name="customerName" required>
            </div>

            <!-- RA Number -->
            <div>
                <label for="raNumber">RA Number *</label>
                <input type="text" id="raNumber" name="raNumber" required>
            </div>

            <!-- Hidden Status Field - Set to "Pending" by default -->
            <input type="hidden" name="status[]" value="Pending">

            <div class="button-group">
                <button type="submit" class="btn">Create Express Claim</button>
                <a href="/claims" class="btn" style="background-color: #6c757d;">Cancel</a>
            </div>
        </form>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Set default date to today
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('accidentDate').value = today;

            // Get DOM elements
            const uploadZone = document.getElementById('uploadZone');
            const fileInput = document.getElementById('fileInput');
            const errorMessage = document.getElementById('errorMessage');
            const successMessage = document.getElementById('successMessage');
            const loadingOverlay = document.querySelector('.loading-overlay');

            // Drag and drop handlers
            uploadZone.addEventListener('dragover', (e) => {
                e.preventDefault();
                uploadZone.classList.add('dragover');
            });

            uploadZone.addEventListener('dragleave', () => {
                uploadZone.classList.remove('dragover');
            });

            uploadZone.addEventListener('drop', (e) => {
                e.preventDefault();
                uploadZone.classList.remove('dragover');
                handleFiles(e.dataTransfer.files);
            });

            uploadZone.addEventListener('click', () => {
                fileInput.click();
            });

            fileInput.addEventListener('change', (e) => {
                handleFiles(e.target.files);
            });

            function handleFiles(files) {
                if (files.length === 0) return;

                const file = files[0];
                const allowedTypes = ['.pdf', '.doc', '.docx'];
                const fileExtension = '.' + file.name.split('.').pop().toLowerCase();

                if (!allowedTypes.includes(fileExtension)) {
                    showError('Invalid file type. Please upload a PDF, DOC, or DOCX file.');
                    return;
                }

                uploadFile(file);
            }

            function uploadFile(file) {
                const formData = new FormData();
                formData.append('rentalAgreement', file);

                showLoading();
                hideError();
                hideSuccess();

                fetch('/claims/rental-agreement', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.error) {
                        throw new Error(data.error);
                    }
                    showSuccess('Rental agreement processed successfully! Redirecting to claim...');
                    // Immediate redirect to the new claim
                    window.location.href = `/claims/${data.claim._id}`;
                })
                .catch(error => {
                    showError(error.message || 'Error processing rental agreement');
                    hideLoading();
                });
            }

            function showLoading() {
                loadingOverlay.style.display = 'flex';
            }

            function hideLoading() {
                loadingOverlay.style.display = 'none';
            }

            function showError(message) {
                errorMessage.textContent = message;
                errorMessage.style.display = 'block';
                successMessage.style.display = 'none';
            }

            function hideError() {
                errorMessage.style.display = 'none';
            }

            function showSuccess(message) {
                successMessage.textContent = message;
                successMessage.style.display = 'block';
                errorMessage.style.display = 'none';
            }

            function hideSuccess() {
                successMessage.style.display = 'none';
            }
        });
    </script>
</body>
</html> 